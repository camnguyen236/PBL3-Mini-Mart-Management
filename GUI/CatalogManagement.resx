<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbRefresh.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>